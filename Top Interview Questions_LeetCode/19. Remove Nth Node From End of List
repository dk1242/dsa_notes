/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        ListNode* temp=head;
        int len=0;
        while(temp!=NULL){
            len++;
            temp=temp->next;
        }
        temp=head;
        int c=len-n;
        int i=0;
        if(c==0){
            head=temp->next;
        }
        while(temp!=NULL){
            if(i++==c-1){
                ListNode* t1=temp->next;
                cout<<temp->val;
                temp->next=t1->next;
            }
            temp=temp->next;
        }
        return head;
    }
};